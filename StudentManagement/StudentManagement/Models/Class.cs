//2 namespaces from MongoDBdriver
using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;

namespace StudentManagement.Models
{
    //If additional fields are added into mongodb db, the application will ignore it
    [BsonIgnoreExtraElements]
    public class Student
    {
        //We want the Id property in student class to be mapped to the autogenerated ID in MongoDB.
        //We use Bson attribute for this - must be for property initialisers, inside class
        //Adding these attribtes is referred to as decorating the property initialisers 
        [BsonId]

        //BsonRepresentation attribute is used to convert .NET objects to mongodb objects
        //[BsonRepresentation(BsonType.ObjectId)] specifically it converts mongodb.objecttype into a .NET type string
        [BsonRepresentation(BsonType.ObjectId)]

        public string Id { get; set; } = String.Empty;//What is string.empty?
        public string Name { get; set; } = String.Empty;

        //This attribute maps isgraduated in .NET appn to 'graduated' field in mongo
        [BsonElement("graduated")]
        public bool IsGraduated { get; set; }

        [BsonElement("age")]
        public int Age { get; set; }

        [BsonElement("courses")]
        public string[]? Courses { get; set; }
        //? means that it can be null (nullable). without ? - warning thrown that courses cannot be null
        [BsonElement("gender")]
        public string Gender { get; set; } = String.Empty;

        //We need the bson element property for attributes even with same name as in mongo as case is diff
        //and C# attributes start with caps
    }
}
